<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create event for the obj_spawn_squares

first_square=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Code for alarm[0] ....
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// spawn squares on top of the screen with random distances

var set_spawn_chance;
var points=obj_touch.points
var p_x_axis;
var chance_xaxis_sign;


if(points&lt;=0) {
    set_spawn_chance=irandom(50);
        }
        
        else if(points&lt;=20&amp;&amp;points&gt;=10) {
                set_spawn_chance=irandom(30);
                }
        
                else if(points&lt;=30&amp;&amp;points&gt;=20){
                        set_spawn_chance=irandom(20);
                         }
         
                              else if(points&lt;=70&amp;&amp;points&gt;=100) {
        
                                     set_spawn_chance=irandom(10)
                                       }
                                        
                                       else {
                                                set_spawn_chance=irandom(5);
                                                }
 


        if(set_spawn_chance==1) {
        physics_world_gravity(0,+(2.0+(0.1*(points+1))));
        alarm[0]=room_speed*(100/(points+1));
       
         x_axis=irandom(680);
        
        //if(first_square==0) {
        
       // p_x_axis=x_axis;
        instance_create(x_axis,y+10,obj_square);
        
        //first_square=1;
        
    // }
       /*   else {
                    x_axis=1000;  
                    chance_sign_xaxis=irandom(1);
                    
                    if(chance_sign_xaxis==1) {
                           
                           while((p_x_axis+x_axis)&gt;680) {
                            
                                    x_axis=irandom(680);
                                    }              
                          
                           
                             instance_create(p_x_axis+x_axis,y+10,obj_square);
                           }
                            else {
                            
                                    while((p_x_axis-x_axis)&lt;40) {
                                        
                                                x_axis=irandom(680);
                                                
                                                }
                                    square_id=instance_create(p_x_axis-x_axis,y+10,obj_square);
                                    
                                    }
                           
                }//End of else */
                            
   }//End of if(set_spawn_chance==1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
